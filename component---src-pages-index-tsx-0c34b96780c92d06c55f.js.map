{"version":3,"sources":["webpack:///./src/components/block-news-item/index.tsx","webpack:///./src/components/block-event-item/index.tsx","webpack:///./src/pages/index.tsx"],"names":["ItemContainer","styled","li","BlockNewsItem","item","i","news","node","frontmatter","key","fixed","image","childImageSharp","alt","to","slug","isInverted","title","date","excerpt","div","BlockEventItem","event","App","data","useStaticQuery","edges","map","events"],"mappings":"6MAMMA,EAAgBC,IAAOC,GAAV,qFAAGD,CAAH,sJAgCNE,EAAiC,SAAC,GAAgB,MAAdC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,EAC7CC,EAAOF,EAAKG,KAAKC,YACvB,OACI,kBAACR,EAAD,CAAeS,IAAKJ,GAChB,kBAAC,IAAD,CAAKK,MAAK,UAAEJ,EAAKK,aAAP,aAAE,EAAYC,gBAAgBF,MAAOG,IAAI,aACnD,kBAAC,IAAD,CAAMC,GAAE,QAAUV,EAAKG,KAAKQ,KAAQC,YAAU,GAC1C,gCAASV,EAAKW,OACd,6BACA,2BAAIX,EAAKY,MACT,6BACCd,EAAKG,KAAKY,W,YC1CrBnB,EAAgBC,IAAOmB,IAAV,sFAAGnB,CAAH,mBAkBNoB,EAAkC,SAAC,GAAgB,IAAdjB,EAAc,EAAdA,KAAMC,EAAQ,EAARA,EAC9CiB,EAAQlB,EAAKG,KAAKC,YACxB,OACI,kBAAC,EAAD,CAAeC,IAAKJ,GAChB,kBAAC,IAAD,CAAMa,KAAMI,EAAMJ,OAClB,kBAAC,IAAD,CAAMJ,GAAE,SAAWV,EAAKG,KAAKQ,KAAQC,YAAU,GAC3C,gCAASM,EAAML,OACf,6BACCb,EAAKG,KAAKY,WC+CZI,UAxEH,WACR,IAAMC,EAAOC,yBAAe,cAmD5B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,MAEA,2CACA,4BACKD,aADL,EACKA,EAAMlB,KAAKoB,MAAMC,KAAI,SAACvB,EAAMC,GAAP,OAClB,kBAAC,EAAD,CAAeD,KAAMA,EAAMC,EAAGA,QAItC,6CAECmB,aAZL,EAYKA,EAAMI,OAAOF,MAAMC,KAAI,SAACvB,EAAMC,GAAP,OACpB,kBAAC,EAAD,CAAgBD,KAAMA,EAAMC,EAAGA","file":"component---src-pages-index-tsx-0c34b96780c92d06c55f.js","sourcesContent":["import React from 'react';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nimport { Link } from '../link';\n\nconst ItemContainer = styled.li`\n    list-style: none;\n    padding: 6px 0;\n    margin: 6px 0;\n    border-bottom: 1px solid #fff;\n\n    .gatsby-image-wrapper {\n        float: left;\n        margin: 0 12px 6px 0;\n        border-radius: 2px;\n    }\n`;\n\ntype Props = {\n    item: {\n        node: {\n            slug: string;\n            excerpt: string;\n            frontmatter: {\n                title: string;\n                date: string;\n                image?: {\n                    childImageSharp: {\n                        fixed: any;\n                    };\n                };\n            };\n        };\n    };\n    i: number;\n};\n\nexport const BlockNewsItem: React.FC<Props> = ({ item, i }) => {\n    const news = item.node.frontmatter;\n    return (\n        <ItemContainer key={i}>\n            <Img fixed={news.image?.childImageSharp.fixed} alt=\"headshot\" />\n            <Link to={`news/${item.node.slug}`} isInverted>\n                <strong>{news.title}</strong>\n                <br />\n                <i>{news.date}</i>\n                <br />\n                {item.node.excerpt}\n            </Link>\n        </ItemContainer>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Link } from '../link';\nimport { Date } from '../date';\n\nconst ItemContainer = styled.div`\n    display: flex;\n`;\n\ntype Props = {\n    item: {\n        node: {\n            slug: string;\n            excerpt: string;\n            frontmatter: {\n                title: string;\n                date: string;\n            };\n        };\n    };\n    i: number;\n};\n\nexport const BlockEventItem: React.FC<Props> = ({ item, i }) => {\n    const event = item.node.frontmatter;\n    return (\n        <ItemContainer key={i}>\n            <Date date={event.date} />\n            <Link to={`event/${item.node.slug}`} isInverted>\n                <strong>{event.title}</strong>\n                <br />\n                {item.node.excerpt}\n            </Link>\n        </ItemContainer>\n    );\n};\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Layout } from '../components/layout';\nimport { SEO } from '../components/seo';\nimport { BlockNewsItem } from '../components/block-news-item';\nimport { BlockEventItem } from '../components/block-event-item';\n\nconst App = () => {\n    const data = useStaticQuery(\n        graphql`\n            {\n                news: allMdx(\n                    sort: { fields: [frontmatter___date], order: DESC }\n                    filter: { fileAbsolutePath: { regex: \"//content/news//\" } }\n                ) {\n                    edges {\n                        node {\n                            id\n                            slug\n                            frontmatter {\n                                title\n                                published\n                                date(formatString: \"MMMM DD, YYYY\")\n                                image {\n                                    childImageSharp {\n                                        fixed(width: 90, height: 90) {\n                                            ...GatsbyImageSharpFixed\n                                        }\n                                    }\n                                }\n                            }\n                            excerpt(pruneLength: 280)\n                        }\n                    }\n                }\n\n                events: allMdx(\n                    sort: { fields: [frontmatter___date], order: DESC }\n                    filter: {\n                        fileAbsolutePath: { regex: \"//content/events//\" }\n                    }\n                ) {\n                    edges {\n                        node {\n                            id\n                            slug\n                            frontmatter {\n                                title\n                                published\n                                date(formatString: \"MMM DD YYYY\")\n                            }\n                            excerpt(pruneLength: 280)\n                        }\n                    }\n                }\n            }\n        `,\n    );\n\n    return (\n        <Layout>\n            <SEO />\n\n            <h3>Latest news</h3>\n            <ul>\n                {data?.news.edges.map((item, i) => (\n                    <BlockNewsItem item={item} i={i} />\n                ))}\n            </ul>\n\n            <h3>Latest events</h3>\n\n            {data?.events.edges.map((item, i) => (\n                <BlockEventItem item={item} i={i} />\n            ))}\n        </Layout>\n    );\n};\n\nexport default App;\n"],"sourceRoot":""}